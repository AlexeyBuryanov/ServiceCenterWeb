@{
    ViewData["Title"] = "Заказы сервисного центра";
    Layout = "/Views/Shared/_Layout.cshtml";
}

<br /><br />
<h2>Список заказов</h2>
<br />
<a asp-area="" asp-controller="AdminPanel" asp-action="Index"
   title="Панель администратора"
   class="btn btn-sm btn-primary">
    <span class="glyphicon glyphicon-arrow-left"></span>&nbsp;Панель администратора
</a>
<hr />
<button id="buttonAdd" class="btn btn-primary btn-sm">
    <span class="glyphicon glyphicon-plus"></span>&nbsp;Добавить заказ
</button>
<br /><br />
@*Разметка таблицы*@
<table id="orders" class="table table-bordered table-hover">
    <thead>
        <tr>
            <th>ID</th>
            <th>Клиент</th>
            <th>Техника</th>
            <th>Мастер</th>
            <th>Вид работы</th>
            <th>Время заказа</th>
            <th>Статус</th>
            <th>Опции</th>
        </tr>
    </thead>
    <tbody></tbody>
    <tfoot></tfoot>
</table>
<br />

@*Разметка диалогов*@
<div id="dialogAdd" title="Добавление нового заказа" style="visibility: collapse;">
    <form>
        <fieldset>
            <label for="clientAdd">Клиент</label>
            <select style="height: 30px;" name="clientAdd" id="clientAdd" class="ui-widget-content ui-corner-all">
                <option selected disabled value="Загрузка ...">Загрузка ...</option>
            </select><br /><br />
            <label for="technicAdd">Техника</label>
            <select style="height: 30px;" name="technicAdd" id="technicAdd" class="ui-widget-content ui-corner-all">
                <option selected disabled value="Загрузка ...">Загрузка ...</option>
            </select><br /><br />
            <label for="masterAdd">Мастер по ремонту</label>
            <select style="height: 30px;" name="masterAdd" id="masterAdd" class="ui-widget-content ui-corner-all">
                <option selected disabled value="Загрузка ...">Загрузка ...</option>
            </select><br /><br />
            <label for="typeWorkAdd">Вид работы</label>
            <select style="height: 30px;" name="typeWorkAdd" id="typeWorkAdd" class="ui-widget-content ui-corner-all">
                <option selected disabled value="Загрузка ...">Загрузка ...</option>
            </select><br /><br />
            <input type="submit" tabindex="-1" style="position: absolute; top: -1000px">
        </fieldset>
    </form>
</div>
<div id="dialogEdit" style="visibility: collapse;">
    <form>
        <fieldset>
            <label for="clientEdit">Клиент</label>
            <select style="height: 30px;" name="clientEdit" id="clientEdit" class="ui-widget-content ui-corner-all">
                <option selected disabled value="Загрузка ...">Загрузка ...</option>
            </select><br /><br />
            <label for="technicEdit">Техника</label>
            <select style="height: 30px;" name="technicEdit" id="technicEdit" class="ui-widget-content ui-corner-all">
                <option selected disabled value="Загрузка ...">Загрузка ...</option>
            </select><br /><br />
            <label for="masterEdit">Мастер по ремонту</label>
            <select style="height: 30px;" name="masterEdit" id="masterEdit" class="ui-widget-content ui-corner-all">
                <option selected disabled value="Загрузка ...">Загрузка ...</option>
            </select><br /><br />
            <label for="typeWorkEdit">Вид работы</label>
            <select style="height: 30px;" name="typeWorkEdit" id="typeWorkEdit" class="ui-widget-content ui-corner-all">
                <option selected disabled value="Загрузка ...">Загрузка ...</option>
            </select><br /><br />
            <input type="submit" tabindex="-1" style="position:absolute; top:-1000px">
        </fieldset>
    </form>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var objectEdit,
                clientAdd = $("#clientAdd"),
                technicAdd = $("#technicAdd"),
                masterAdd = $("#masterAdd"),
                typeWorkAdd = $("#typeWorkAdd"),
                clientEdit = $("#clientEdit"),
                technicEdit = $("#technicEdit"),
                masterEdit = $("#masterEdit"),
                typeWorkEdit = $("#typeWorkEdit");

            // Заполняем комбо-боксы значениями из базы с помощью AJAX и WebAPI
            function fillSelects() {
                $.ajax({
                    url: '../api/clients',
                    method: "GET",
                    success:
                        function (clients) {
                            clientAdd.find("option")
                                .remove()
                                .end();
                            clientEdit.find("option")
                                .remove()
                                .end();
                            clients.forEach(function (item) {
                                clientAdd.find("option")
                                    .end()
                                    .append(`<option value="${item.id}">${item.lastName}</option>`);
                                clientEdit.find("option")
                                    .end()
                                    .append(`<option value="${item.id}">${item.lastName}</option>`);
                            });
                        },
                    error:
                        function (xmlHttpRequest, textStatus, errorThrown) {
                            alert(`Ошибка при получении объекта типа клиент для комбо-бокса!\n\nСтатус: ${textStatus
                                }\n\n${
                                errorThrown}`);
                        }
                });
                $.ajax({
                    url: '../api/technics',
                    method: "GET",
                    success:
                        function (technics) {
                            technicAdd.find("option")
                                .remove()
                                .end();
                            technicEdit.find("option")
                                .remove()
                                .end();
                            technics.forEach(function (item) {
                                technicAdd.find("option")
                                    .end()
                                    .append(`<option value="${item.id}">${item.name}</option>`);
                                technicEdit.find("option")
                                    .end()
                                    .append(`<option value="${item.id}">${item.name}</option>`);
                            });
                        },
                    error:
                        function (xmlHttpRequest, textStatus, errorThrown) {
                            alert(`Ошибка при получении объекта техники для комбо-бокса!\n\nСтатус: ${textStatus}\n\n${
                                errorThrown}`);
                        }
                });
                $.ajax({
                    url: '../api/masters',
                    method: "GET",
                    success:
                        function (masters) {
                            masterAdd.find("option")
                                .remove()
                                .end();
                            masterEdit.find("option")
                                .remove()
                                .end();
                            masters.forEach(function (item) {
                                masterAdd.find("option")
                                    .end()
                                    .append(`<option value="${item.id}">${item.lastName}</option>`);
                                masterEdit.find("option")
                                    .end()
                                    .append(`<option value="${item.id}">${item.lastName}</option>`);
                            });
                        },
                    error:
                        function (xmlHttpRequest, textStatus, errorThrown) {
                            alert(`Ошибка при получении объекта мастеров для комбо-бокса!\n\nСтатус: ${textStatus}\n\n${
                                errorThrown}`);
                        }
                });
                $.ajax({
                    url: '../api/typeworks',
                    method: "GET",
                    success:
                        function (typeworks) {
                            typeWorkAdd.find("option")
                                .remove()
                                .end();
                            typeWorkEdit.find("option")
                                .remove()
                                .end();
                            typeworks.forEach(function (item) {
                                typeWorkAdd.find("option")
                                    .end()
                                    .append(`<option value="${item.id}">${item.name}</option>`);
                                typeWorkEdit.find("option")
                                    .end()
                                    .append(`<option value="${item.id}">${item.name}</option>`);
                            });
                        },
                    error:
                        function (xmlHttpRequest, textStatus, errorThrown) {
                            alert(`Ошибка при получении объекта техники для комбо-бокса!\n\nСтатус: ${textStatus}\n\n${
                                errorThrown}`);
                        }
                });
            } // fillSelects

            fillSelects();

            // Диалог добавления
            var dialogAdd = $("#dialogAdd").dialog({
                autoOpen: false,
                height: 480,
                width: 500,
                modal: true,
                buttons: {
                    "Добавить": add,
                    Отмена:
                        function () {
                            dialogAdd.dialog("close");
                        }
                }
            });
            // Диалог редактирования
            var dialogEdit = $("#dialogEdit").dialog({
                autoOpen: false,
                height: 480,
                width: 500,
                modal: true,
                buttons: {
                    "Редактировать": edit,
                    Отмена:
                        function () {
                            dialogEdit.dialog("close");
                        }
                }
            });

            // Для удобства показа
            function showDialogAdd() {
                $("#dialogAdd").css("visibility", "visible");
                dialogAdd.dialog("open");
            }
            function showDialogEdit() {
                $("#dialogEdit").css("visibility", "visible");
                dialogEdit.dialog("open");
            }

            // Для выбора значения в комбо-боксе
            function setSelectedValue(selectObj, valueToSet) {
                for (let i = 0; i < selectObj.options.length; i++) {
                    if (selectObj.options[i].value == valueToSet) {
                        selectObj.options[i].selected = true;
                        return;
                    } // if
                } // for i
            }

            // Назначаем обработчик по клику для кнопки добавления
            $("#buttonAdd").on("click",
                function () {
                    showDialogAdd();
                });

            var dataId = 0;
            // DataTable jquery
            var table = $("#orders").DataTable({
                rowReorder: true,
                colReorder: true,
                ajax: {
                    url: "../api/orders/",
                    dataSrc: ""
                },
                columns: [
                    {
                        data: "id"
                    },
                    {
                        data: "client.lastName"
                    },
                    {
                        data: "technic.name"
                    },
                    {
                        data: "master.lastName"
                    },
                    {
                        data: "typeWork.name"
                    },
                    {
                        data: "orderDate",
                        render: function (data, type, row) {
                            let dateSplit = data.split('-');
                            let timeSplit = data.split(':');
                            return type === "display" || type === "filter"
                                ? `${dateSplit[2].substring(0, 2)}.${dateSplit[1]}.${dateSplit[0]}
                                            ${timeSplit[0].substring(timeSplit[0].length - 2, timeSplit[0].length)}:${timeSplit
                                [1]}:${timeSplit[2]}`
                                : data;
                        }
                    },
                    {
                        data: "isCompleted",
                        render: (data, type, row) => {
                            if (data) {
                                return "Выполнен";
                            } else {
                                return "Работаем";
                            } // if
                        }
                    },
                    {
                        data: "id",
                        render: function (data, type, row) {
                            return `<button class='btn btn-sm btn-danger delete-order' style="width: 100px;" data-order-id=${data}>
                                            <span class="glyphicon glyphicon-remove"></span>&nbsp;Удалить
                                    </button><br/>
                                    <button class='btn btn-sm btn-primary edit-order' style="width: 100px;" data-order-id=${data}>
                                        <span class="glyphicon glyphicon-edit"></span>&nbsp;Изменить
                                    </button><br/>
                                    <button class='btn btn-sm btn-primary mark-order' style="width: 100px;" data-completed-id=${data}>
                                        Статус
                                    </button>`;
                        }
                    }
                ]
            });

            // Изменение состояния готовности заказа
            $("#orders").on("click",
                ".mark-order",
                function () {
                    let btn = $(this);
                    btn.prop('disabled', true);
                    $.ajax({
                        url: `../api/orders/${btn.attr("data-completed-id")}`,
                        method: "GET",
                        success:
                            function (order) {
                                objectEdit = order;
                                checkedOrder();
                            },
                        error:
                            function (xmlHttpRequest, textStatus, errorThrown) {
                                alert(`Ошибка при получении объекта!\n\nСтатус: ${textStatus}\n\n${errorThrown}\n\n${xmlHttpRequest
                                    .responseText}`);
                            }
                    });
                });

            function checkedOrder() {
                let order = objectEdit;
                order.isCompleted = !order.isCompleted;
                $.ajax({
                    contentType: "application/json",
                    dataType: "json",
                    data: JSON.stringify(order),
                    url: "../api/orders/",
                    method: "PUT",
                    success:
                        function () {
                            table.ajax.reload(null, false);
                        },
                    error:
                        function (xmlHttpRequest, textStatus, errorThrown) {
                            alert(`Ошибка при редактировании!\n\nСтатус: ${textStatus}\n\n${errorThrown}\n\n${xmlHttpRequest
                                .responseText}`);
                        }
                });
            }

            // Удаление
            $("#orders").on("click",
                ".delete-order",
                function () {
                    let button = $(this);
                    if (confirm(`Вы действительно хотите удалить технику с ID ${button.attr("data-order-id")}?`)) {
                        $.ajax({
                            url: `../api/orders/${button.attr("data-order-id")}`,
                            method: "DELETE",
                            success:
                                function () {
                                    table.row(button.parents("tr")).remove().draw();
                                },
                            error:
                                function (xmlHttpRequest, textStatus, errorThrown) {
                                    alert(`Ошибка при удалении!\n\nСтатус: ${textStatus}\n\n${errorThrown}`);
                                }
                        });
                    }
                });
            // Редактирование
            $("#orders").on("click",
                ".edit-order",
                function () {
                    let button = $(this);
                    $.ajax({
                        url: `../api/orders/${button.attr("data-order-id")}`,
                        method: "GET",
                        success:
                            function (order) {
                                objectEdit = order;

                                setSelectedValue(document.getElementById("clientEdit"), objectEdit.clientId);
                                setSelectedValue(document.getElementById("technicEdit"), objectEdit.technicId);
                                setSelectedValue(document.getElementById("masterEdit"), objectEdit.masterId);
                                setSelectedValue(document.getElementById("typeWorkEdit"), objectEdit.typeWorkId);

                                dialogEdit.dialog('option', 'title', `Редактирование заказа с ID=${objectEdit.id}`);
                                showDialogEdit();
                            },
                        error:
                            function (xmlHttpRequest, textStatus, errorThrown) {
                                alert(`Ошибка при получении объекта!\n\nСтатус: ${textStatus}\n\n${errorThrown}`);
                            }
                    });
                });

            // Функция добавления
            function add() {
                let d = new Date();
                let date = `${d.getFullYear()}/${d.getMonth() + 1}/${d.getDate()} ${d.getHours()}:${d.getMinutes()}:${d.getSeconds()}`;
                let order = {
                    id: 0,
                    clientId: $("#clientAdd option:selected").attr("value"),
                    client: {
                        id: 0,
                        firstName: "asd",
                        lastName: $("#clientAdd option:selected").text(),
                        mobilePhone: "asd",
                        reputation: 0
                    },
                    technicId: $("#technicAdd option:selected").attr("value"),
                    technic: {
                        id: 0,
                        name: $("#technicAdd option:selected").text(),
                        typeTechnic: {
                            id: 0,
                            name: "asd"
                        },
                        manufacturer: {
                            id: 0,
                            name: "asd"
                        }
                    },
                    masterId: $("#masterAdd option:selected").attr("value"),
                    master: {
                        id: 0,
                        firstName: "asd",
                        lastName: $("#masterAdd option:selected").text(),
                        mobilePhone: "asd",
                        reputation: 0
                    },
                    typeWorkId: $("#typeWorkAdd option:selected").attr("value"),
                    typeWork: {
                        id: 0,
                        name: $("#typeWorkAdd option:selected").text()
                    },
                    orderDate: date,
                    isCompleted: 0
                };
                $.ajax({
                    contentType: "application/json",
                    dataType: "json",
                    data: JSON.stringify(order),
                    url: "../api/orders/",
                    method: "POST",
                    success:
                        function () {
                            table.ajax.reload(null, false);
                            fillSelects();
                        },
                    error:
                        function (xmlHttpRequest, textStatus, errorThrown) {
                            alert(`Ошибка при добавлении!\n\nСтатус: ${textStatus}\n\n${errorThrown}\n\n${xmlHttpRequest
                                .responseText}`);
                        }
                });
                dialogAdd.dialog("close");
            }

            // Функция редактирования
            function edit() {
                let d = new Date();
                let date = `${d.getFullYear()}/${d.getMonth() + 1}/${d.getDate()} ${d.getHours()}:${d.getMinutes()}:${d.getSeconds()}`;
                let order = {
                    id: objectEdit.id,
                    clientId: $("#clientEdit option:selected").attr("value"),
                    client: {
                        id: 0,
                        firstName: "asd",
                        lastName: $("#clientEdit option:selected").text(),
                        mobilePhone: "asd",
                        reputation: 0
                    },
                    technicId: $("#technicEdit option:selected").attr("value"),
                    technic: {
                        id: 0,
                        name: $("#technicEdit option:selected").text(),
                        typeTechnic: {
                            id: 0,
                            name: "asd"
                        },
                        manufacturer: {
                            id: 0,
                            name: "asd"
                        }
                    },
                    masterId: $("#masterEdit option:selected").attr("value"),
                    master: {
                        id: 0,
                        firstName: "asd",
                        lastName: $("#masterEdit option:selected").text(),
                        mobilePhone: "asd",
                        reputation: 0
                    },
                    typeWorkId: $("#typeWorkEdit option:selected").attr("value"),
                    typeWork: {
                        id: 0,
                        name: $("#typeWorkEdit option:selected").text()
                    },
                    orderDate: date,
                    isCompleted: 0
                };
                $.ajax({
                    contentType: "application/json",
                    dataType: "json",
                    data: JSON.stringify(order),
                    url: "../api/orders/",
                    method: "PUT",
                    success:
                        function () {
                            table.ajax.reload(null, false);
                        },
                    error:
                        function (xmlHttpRequest, textStatus, errorThrown) {
                            alert(`Ошибка при редактировании!\n\nСтатус: ${textStatus}\n\n${errorThrown}`);
                        }
                });
                dialogEdit.dialog("close");
            }

            // Форма добавления, привязываем действие к сабмиту
            dialogAdd.find("form").on("submit",
                function () {
                    add();
                }
            );
            // Форма редактирования, привязываем действие к сабмиту
            dialogEdit.find("form").on("submit",
                function () {
                    edit();
                }
            );
        });
    </script>
}